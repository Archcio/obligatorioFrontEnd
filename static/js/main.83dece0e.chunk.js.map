{"version":3,"sources":["components/Login.js","components/Registro.js","components/Producto.js","components/ProductoCarrito.js","components/Productos.js","components/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","history","useState","email","password","errorMsg","state","setState","useEffect","sessionStorage","removeItem","handleInputChange","target","name","value","className","htmlFor","type","onChange","required","onClick","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","status","setItem","push","catch","err","onSubmit","Producto","producto","description","price","photo","agregarProducto","src","height","width","ProductoCarrito","productoCarrito","quantity","borrarProducto","restarProducto","sumarProducto","readOnly","Productos","productos","filtrados","productosCarrito","total","cantidadItems","iva","nom","i","length","aux","productosFiltradas","filter","prod","resta","filtrar","encontre","includes","nombre","arrayRestar","nuevoProd","getItem","this","props","that","id","slice","map","index","key","style","display","margin","backgroundColor","count","effect","Effect","SCALE","React","Component","PageNotFound","App","path","component","Login","exact","Registro","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.83dece0e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport '../styles/login.scss';\n\nconst Login = ({ history }) => {\n\n  const [state, setState] = useState({\n    email: '',\n    password: '',\n    errorMsg:'',\n  });\n\n  const { email, password, errorMsg } = state;\n\n  useEffect(() => {\n    sessionStorage.removeItem(\"usuarioLogueado\");\n  },[])\n\n  const handleInputChange = ({ target: { name, value } }) => {\n    setState({\n      ...state,\n      [name]: value\n    })\n  }\n\n  // const [email, setEmail] = useState('fran@cisco.com');\n  // const [password, setPassword] = useState('francisco');\n  // const [errorMsg, setErrorMsg] = useState('');\n\n  // const handleEmailChange = ({ target: { value } }) => {\n  //   setEmail(value);\n  // }\n\n  // const handlePasswordChange = ({ target: { value } }) => {\n  //   setPassword(value);\n  // }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch('http://tiendaonline2020.herokuapp.com/api/user/login',{\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify({\n                email,\n                password\n            })\n        })\n        .then(res => res.json())\n        .then(res => {\n          console.log(\"Éxito!\",res);\n          if(res.status && res.status !== 200)\n          {\n            setState({\n              ...state,\n              errorMsg: \"No existe un usuario con dicha contraseña. Intente nuevamente.\"           \n            });\n          } else {\n            sessionStorage.setItem(\"usuarioLogueado\",1);\n            history.push(\"/productos\");\n          }\n        })\n        .catch(err => console.log(\"Error!\",err));\n  }\n\n  const reRoute =() => history.push(\"/registro\")\n\n\n  return (\n    <div className=\"login\">\n      <form className=\"login-form\">\n        <label htmlFor=\"email\">Email de usuario: </label>\n        <input type=\"email\" name=\"email\" value={email} onChange={handleInputChange} required/>\n        <label htmlFor=\"password\">Contraseña: </label>\n        <input type=\"password\" name=\"password\" value={password} onChange={handleInputChange} required/>\n        <input type=\"button\" value=\"Iniciar Sesión\" onClick={handleSubmit}/>\n        <input type=\"button\" value=\"Registro\" onClick={reRoute}/>\n        { errorMsg &&\n          <h2 className=\"error\">{errorMsg}</h2>\n        }\n      </form>\n    </div>\n  );\n};\n\nLogin.propTypes = {\n\n};\n\nexport default withRouter(Login);\n","import React, { useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../styles/registro.scss';\r\n\r\nconst Registro = ({ history }) => {\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n        errorMsg:'',\r\n      });\r\n\r\n      const { email, password, errorMsg } = state;\r\n\r\n      const handleInputChange = ({ target: { name, value } }) => {\r\n        setState({\r\n          ...state,\r\n          [name]: value\r\n        })\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    \r\n        fetch('http://tiendaonline2020.herokuapp.com/api/user/register',{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email,\r\n                    password\r\n                })\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n              console.log(\"Éxito!\",res);\r\n              if(res.status && res.status !== 200)\r\n              {\r\n                setState({\r\n                  ...state,\r\n                  errorMsg: \"Datos invalidos. Intente nuevamente.\"           \r\n                });\r\n              } else {\r\n                sessionStorage.setItem(\"usuarioLogueado\",1);\r\n                history.push(\"/productos\");\r\n              }\r\n            })\r\n            .catch(err => console.log(\"Error!\",err));\r\n      }\r\n\r\nreturn (\r\n    <div className=\"registro\">\r\n      <form onSubmit={handleSubmit} className=\"registro-form\">\r\n        <label htmlFor=\"email\">Email de usuario: </label>\r\n        <input type=\"email\" name=\"email\" value={email} onChange={handleInputChange} required/>\r\n        <label htmlFor=\"password\">Contraseña: </label>\r\n        <input type=\"password\" name=\"password\" value={password} onChange={handleInputChange} required/>\r\n        <input type=\"submit\" value=\"Registrarse\"/>\r\n        { errorMsg &&\r\n          <h2 className=\"error\">{errorMsg}</h2>\r\n        }\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegistro.propTypes = {\r\n\r\n};\r\n\r\nexport default withRouter(Registro);\r\n","import React from \"react\";\r\n\r\n\r\n// Ya estoy recibiendo desestructuradas a las props! No necesito\r\n//      tener una variable para las props.\r\n\r\nconst Producto = ({ producto: { name, description, price, photo}, agregarProducto}) => (\r\n  <td className=\"producto\">\r\n    <p>Item: {name}</p>\r\n    <p>Descripcion: {description}</p>\r\n    <p>Costo: {price}</p>\r\n    <p><img src={photo} height=\"100px\" width=\"100px\"/></p>\r\n   <input\r\n      type=\"button\"\r\n      value=\"Agregar\"\r\n      onClick={() => agregarProducto(name, price)}\r\n     \r\n    />\r\n  </td>\r\n);\r\n\r\n\r\n\r\nexport default Producto;\r\n","import React from \"react\";\r\n\r\n\r\n// Ya estoy recibiendo desestructuradas a las props! No necesito\r\n//      tener una variable para las props.\r\n\r\n\r\nconst ProductoCarrito = ({ productoCarrito: { name, price , quantity} , borrarProducto, restarProducto, sumarProducto}) => (\r\n  \r\n    <p> <span>Item: {name}  ----  </span>\r\n     <input\r\n      type=\"button\"\r\n      value=\"-\"\r\n      onClick={() => restarProducto(name)}\r\n      //   onClick siempre debe ser una función! No poner una invocación a una función!\r\n    />\r\n   Cantidad: <input type=\"text\" value={quantity} readOnly/>\r\n   <input\r\n      type=\"button\"\r\n      value=\"+\"\r\n      onClick={() => sumarProducto(name)}\r\n      //   onClick siempre debe ser una función! No poner una invocación a una función!\r\n    />\r\n   <input\r\n      type=\"button\"\r\n      value=\"Borrar\"\r\n      onClick={() => borrarProducto(name)}\r\n      //   onClick siempre debe ser una función! No poner una invocación a una función!\r\n    />\r\n     <span> Subtotal    <input\r\n      type=\"text\"\r\n      value={price}\r\n      readOnly\r\n      //   onClick siempre debe ser una función! No poner una invocación a una función!\r\n    />\r\n    </span>\r\n    \r\n    </p>\r\n \r\n);\r\n\r\nexport default ProductoCarrito;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../styles/productos.scss';\r\nimport Producto from './Producto';\r\nimport ProductoCarrito from './ProductoCarrito';\r\nimport NotificationBadge from 'react-notification-badge';\r\nimport {Effect} from 'react-notification-badge';\r\n \r\n\r\n\r\n\r\nclass Productos extends React.Component {\r\n    state = {\r\n        productos: [],\r\n        filtrados: [],\r\n        productosCarrito: [],\r\n        total: 0,\r\n        cantidadItems: 0,\r\n        iva: 0,\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (sessionStorage.getItem(\"usuarioLogueado\") !== \"1\") {\r\n            this.props.history.push(\"/login\");\r\n        }\r\n\r\n        const that = this;\r\n        fetch('http://tiendaonline2020.herokuapp.com/api/product/all', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n        }).then(function (res) {\r\n            return res.json();\r\n        })\r\n            .then(function (res) {\r\n\r\n\r\n                that.setState({ productos: res });\r\n                that.setState({ filtrados: res });\r\n                //console.log(res);\r\n            });\r\n\r\n    }\r\n\r\n    sumarProducto = nom => {\r\n\r\n        const { productosCarrito, cantidadItems } = this.state;\r\n        for (var i = 0; i < productosCarrito.length; i++) {\r\n            if (productosCarrito[i].name === nom) {\r\n                productosCarrito[i].price = productosCarrito[i].price + productosCarrito[i].price / productosCarrito[i].quantity;\r\n                productosCarrito[i].quantity = productosCarrito[i].quantity + 1;\r\n                this.setState({ productosCarrito: productosCarrito });\r\n                this.setState({ cantidadItems: cantidadItems+1 });\r\n                var aux =0;\r\n                console.log(productosCarrito)\r\n                if(productosCarrito.length >0){\r\n                for( i = 0; i < productosCarrito.length; i++){\r\n                    console.log(\"vueltita con aux = \");\r\n                    aux = aux +  productosCarrito[i].price ;\r\n                }\r\n                this.setState({ total: aux });\r\n                this.setState({ iva: (aux*22)/100 });\r\n                this.setState({ cantidadItems: cantidadItems+1 });\r\n             }\r\n            }\r\n\r\n        };\r\n    }\r\n\r\n\r\n\r\n\r\n    restarProducto = nom => {\r\n\r\n        const { productosCarrito, total, cantidadItems } = this.state;\r\n        for (var i = 0; i < productosCarrito.length; i++) {\r\n            if (productosCarrito[i].name === nom) {\r\n\r\n\r\n                if (productosCarrito[i].quantity > 1) {\r\n                    this.setState({ total: total- productosCarrito[i].price / productosCarrito[i].quantity});\r\n                    this.setState({ iva: ((total- productosCarrito[i].price / productosCarrito[i].quantity)*22)/100 });\r\n     \r\n                    productosCarrito[i].price = productosCarrito[i].price - productosCarrito[i].price / productosCarrito[i].quantity;\r\n                    productosCarrito[i].quantity = productosCarrito[i].quantity - 1;\r\n                    this.setState({ productosCarrito: productosCarrito });\r\n                    this.setState({ cantidadItems: cantidadItems-1});\r\n                }\r\n                else {\r\n\r\n                    const productosFiltradas = productosCarrito.filter(prod => prod.name !== nom);\r\n                    const arrayRestar = productosCarrito.filter(prod => prod.name === nom)\r\n                    var resta = arrayRestar[0].price\r\n                                                 \r\n                    this.setState({ productosCarrito: productosFiltradas });\r\n                    if(total-resta<1){\r\n                        this.setState({ total: 0})     \r\n                        this.setState({ iva: 0})  \r\n                        this.setState({ cantidadItems: cantidadItems-1 });       \r\n                    }   else{\r\n                    this.setState({ total: total- resta});\r\n                    this.setState({ iva: ((total- resta)*22)/100 });    \r\n                    this.setState({ cantidadItems: cantidadItems-1 });\r\n                }}\r\n\r\n\r\n            }\r\n        }\r\n        \r\n        \r\n     \r\n    }\r\n\r\n\r\n    filtrar = ({ target: { value } }) => {\r\n        const { productos} = this.state;\r\n        var aux = []\r\n        var encontre = false;\r\n        if (value === \"\") {\r\n            this.setState({ filtrados: productos });\r\n        } else {\r\n            for (var i = 0; i < productos.length; i++) {\r\n                if (productos[i].name.includes(value)) {    \r\n                    encontre = true;              \r\n                    aux.push(productos[i])\r\n                    console.log(\"Aca\");\r\n                }\r\n                }\r\n               \r\n            }\r\n            if(encontre){\r\n            return this.setState({ filtrados: aux })}\r\n            else{\r\n                console.log(\"Aqui\")\r\n                return this.setState({ filtrados: productos })}\r\n\r\n            \r\n        }\r\n\r\n\r\n\r\n    borrarProducto = nombre => {\r\n        const { productosCarrito, total, cantidadItems } = this.state;\r\n        const arrayRestar = productosCarrito.filter(prod => prod.name === nombre)\r\n        var resta = arrayRestar[0].price\r\n        console.log(\"Voy a restar... \" + resta + \" a \" + total)\r\n        const productosFiltradas = productosCarrito.filter(prod => prod.name !== nombre);\r\n        this.setState({ productosCarrito: productosFiltradas });\r\n        console.log(productosCarrito)\r\n        this.setState({ cantidadItems: cantidadItems-arrayRestar[0].quantity });\r\n        if(total-resta <1){\r\n            this.setState({ total: 0 });\r\n            this.setState({ iva: 0 });\r\n         \r\n        }else{\r\n        this.setState({ total: total - resta });\r\n        this.setState({ iva: ((total- resta)*22)/100 });    \r\n    }\r\n\r\n\r\n\r\n    \r\n    };\r\n  \r\n    \r\n\r\n    agregarProducto = (name, price) => {\r\n    const { productosCarrito, total,  cantidadItems } = this.state;\r\n            const productosFiltradas = productosCarrito.filter(prod => prod.name === name);\r\n\r\n            if (productosFiltradas.length > 0) {\r\n                console.log(\"Entre en este\")\r\n                for (var i = 0; i < productosCarrito.length; i++) {\r\n                    if (productosCarrito[i].name === name) {\r\n                        productosCarrito[i].price = productosCarrito[i].price + productosCarrito[i].price / productosCarrito[i].quantity;\r\n                          productosCarrito[i].quantity = productosCarrito[i].quantity + 1;\r\n                        this.setState({ productosCarrito: productosCarrito });\r\n                        this.setState({total : total+price});\r\n                        this.setState({iva : ((total+price)*22)/100});\r\n                        this.setState({ cantidadItems: cantidadItems+1 });\r\n                    }\r\n                };\r\n\r\n\r\n\r\n            } else {\r\n                console.log(\"Entre en el otro\")\r\n                const nuevoProd = { name: name, price: price, quantity: 1 };\r\n                this.setState({ productosCarrito: [...productosCarrito, nuevoProd] });\r\n                this.setState({total : total+nuevoProd.price});\r\n                this.setState({iva : ((total+nuevoProd.price)*22)/100});\r\n                this.setState({ cantidadItems: cantidadItems+1 });\r\n\r\n            }\r\n\r\n    };\r\n\r\n \r\n\r\n    render() {\r\n        const { filtrados, productosCarrito, total, iva, cantidadItems } = this.state;\r\n\r\n        let container = {\r\n            height: '50px',\r\n            width: '50px',\r\n            display: 'inline-block',\r\n            margin: '5px',\r\n            backgroundColor: 'gray',\r\n          }\r\n\r\n        // Si quisiera ser mas prolijo, podria hacer un slice a la mitad de Length redondeada.\r\n        return (\r\n\r\n            <div>\r\n                {console.log(\"Cargarrrrrrrrrrr\")}\r\n                {console.log(filtrados.length)}\r\n\r\n                <p> Busqueda <input type=\"Text\" id=\"unId\" onChange={this.filtrar} /></p>\r\n\r\n                <table>\r\n                    <tbody>\r\n                        <tr>{\r\n                            filtrados.slice(0, 7).map((producto, index) => (\r\n                                <Producto key={index} producto={producto} agregarProducto={this.agregarProducto} />\r\n                            ))\r\n                        }</tr>\r\n\r\n\r\n                        <tr>{\r\n                            filtrados.slice(8, 14).map((producto, index) => (\r\n                                <Producto key={index} producto={producto} agregarProducto={this.agregarProducto} />\r\n                            ))\r\n                        }</tr>\r\n\r\n                    </tbody>\r\n                </table>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <div id=\"carrito\">\r\n                    <p>Este es su carrito</p>\r\n                    {productosCarrito.length === 0 ? (\r\n                        <p>No hay ningun producto en su carrito</p>\r\n                    ) : (\r\n                            productosCarrito.map((productoCarrito, index) => (\r\n                                <ProductoCarrito key={index} productoCarrito={productoCarrito} borrarProducto={this.borrarProducto} sumarProducto={this.sumarProducto} restarProducto={this.restarProducto} />\r\n                            ))\r\n                        )}\r\n\r\n                    <p>Total: <input type=\"text\" value={total} readOnly /> </p>\r\n                    <p>Iva: <input type=\"text\" value={iva} readOnly /> </p>\r\n                \r\n                    <div className=\"container\" style={container}>\r\n  <NotificationBadge count={cantidadItems} effect={Effect.SCALE}/>\r\n</div>\r\n                   {/*Badge utilizado: https://www.npmjs.com/package/react-notification-badge*/}\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(Productos);\r\n","import React from 'react'\n\nconst PageNotFound = () => <h2>Ups! No existe la página que estás buscando... :-(</h2>\n\nexport default PageNotFound;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './components/Login';\nimport Registro from './components/Registro';\nimport Productos from './components/Productos';\nimport PageNotFound from './components/PageNotFound';\nimport './App.scss';\n\nclass App extends Component {\n  render() { \n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>Obligatorio</p>\n        </header>\n        <Switch>\n          <Route path=\"/login\" component={Login} exact/>\n          <Route path=\"/registro\" component={Registro} exact/>\n          <Route path=\"/productos\" component={Productos} exact/>\n          \n          <Route component={PageNotFound}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}